apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-service
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: test-service
  ingress:
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 8000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: test-service
  annotations:
    external-dns.alpha.kubernetes.io/hostname: test-service.borg-ols-rd-1-aws-eu-west-1.k8s.in.here.com
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '60'
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  name: test-service
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: test-service
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-service
  template:
    metadata:
      labels:
        app: test-service
    spec:
      containers:
      - name: run
        image: hcr.data.here.com/tribulat/test-service-gt:1.0.0-3
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          limits:
            memory: "256Mi"
            cpu: 1
          requests:
            memory: "128Mi"
            cpu: 0.5
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 20"]
